"""
    https://api.partner.microsoft.com/v1.0/ingestion

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: 1.0
    Generated by: https://openapi-generator.tech
"""


import re  # noqa: F401
import sys  # noqa: F401

from ..api_client import ApiClient, Endpoint as _Endpoint
from ..model_utils import (  # noqa: F401
    check_allowed_values,
    check_validations,
    date,
    datetime,
    file_type,
    none_type,
    validate_and_convert_types
)
from ..model.microsoft_ingestion_api_models_common_paged_collection_microsoft_ingestion_api_models_submissions_certification_report import MicrosoftIngestionApiModelsCommonPagedCollectionMicrosoftIngestionApiModelsSubmissionsCertificationReport
from ..model.microsoft_ingestion_api_models_common_paged_collection_microsoft_ingestion_api_models_submissions_submission import MicrosoftIngestionApiModelsCommonPagedCollectionMicrosoftIngestionApiModelsSubmissionsSubmission
from ..model.microsoft_ingestion_api_models_common_paged_collection_microsoft_ingestion_api_models_submissions_validation_item import MicrosoftIngestionApiModelsCommonPagedCollectionMicrosoftIngestionApiModelsSubmissionsValidationItem
from ..model.microsoft_ingestion_api_models_common_paged_collection_microsoft_ingestion_api_models_submissions_workflow_detail import MicrosoftIngestionApiModelsCommonPagedCollectionMicrosoftIngestionApiModelsSubmissionsWorkflowDetail
from ..model.microsoft_ingestion_api_models_submissions_submission import MicrosoftIngestionApiModelsSubmissionsSubmission
from ..model.microsoft_ingestion_api_models_submissions_submission_creation_request import MicrosoftIngestionApiModelsSubmissionsSubmissionCreationRequest
from ..model.microsoft_ingestion_api_models_submissions_workflow_detail import MicrosoftIngestionApiModelsSubmissionsWorkflowDetail


class SubmissionClient(object):
    """NOTE: This class is auto generated by OpenAPI Generator
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    def __init__(self, api_client=None):
        if api_client is None:
            api_client = ApiClient()
        self.api_client = api_client
        self.products_product_id_submissions_get_endpoint = _Endpoint(
            settings={
                'response_type': (MicrosoftIngestionApiModelsCommonPagedCollectionMicrosoftIngestionApiModelsSubmissionsSubmission,),
                'auth': [],
                'endpoint_path': '/products/{productID}/submissions',
                'operation_id': 'products_product_id_submissions_get',
                'http_method': 'GET',
                'servers': None,
            },
            params_map={
                'all': [
                    'product_id',
                    'authorization',
                    'filter',
                    'expand',
                    'client_request_id',
                ],
                'required': [
                    'product_id',
                    'authorization',
                ],
                'nullable': [
                ],
                'enum': [
                ],
                'validation': [
                ]
            },
            root_map={
                'validations': {
                },
                'allowed_values': {
                },
                'openapi_types': {
                    'product_id':
                        (str,),
                    'authorization':
                        (str,),
                    'filter':
                        (str,),
                    'expand':
                        (str,),
                    'client_request_id':
                        (str,),
                },
                'attribute_map': {
                    'product_id': 'productID',
                    'authorization': 'Authorization',
                    'filter': '$filter',
                    'expand': '$expand',
                    'client_request_id': 'Client-Request-ID',
                },
                'location_map': {
                    'product_id': 'path',
                    'authorization': 'header',
                    'filter': 'query',
                    'expand': 'query',
                    'client_request_id': 'header',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [],
            },
            api_client=api_client
        )
        self.products_product_id_submissions_post_endpoint = _Endpoint(
            settings={
                'response_type': (MicrosoftIngestionApiModelsSubmissionsSubmission,),
                'auth': [],
                'endpoint_path': '/products/{productID}/submissions',
                'operation_id': 'products_product_id_submissions_post',
                'http_method': 'POST',
                'servers': None,
            },
            params_map={
                'all': [
                    'product_id',
                    'authorization',
                    'client_request_id',
                    'microsoft_ingestion_api_models_submissions_submission_creation_request',
                ],
                'required': [
                    'product_id',
                    'authorization',
                ],
                'nullable': [
                ],
                'enum': [
                ],
                'validation': [
                ]
            },
            root_map={
                'validations': {
                },
                'allowed_values': {
                },
                'openapi_types': {
                    'product_id':
                        (str,),
                    'authorization':
                        (str,),
                    'client_request_id':
                        (str,),
                    'microsoft_ingestion_api_models_submissions_submission_creation_request':
                        (MicrosoftIngestionApiModelsSubmissionsSubmissionCreationRequest,),
                },
                'attribute_map': {
                    'product_id': 'productID',
                    'authorization': 'Authorization',
                    'client_request_id': 'Client-Request-ID',
                },
                'location_map': {
                    'product_id': 'path',
                    'authorization': 'header',
                    'client_request_id': 'header',
                    'microsoft_ingestion_api_models_submissions_submission_creation_request': 'body',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [
                    'application/json'
                ]
            },
            api_client=api_client
        )
        self.products_product_id_submissions_submission_id_delete_endpoint = _Endpoint(
            settings={
                'response_type': None,
                'auth': [],
                'endpoint_path': '/products/{productID}/submissions/{submissionID}',
                'operation_id': 'products_product_id_submissions_submission_id_delete',
                'http_method': 'DELETE',
                'servers': None,
            },
            params_map={
                'all': [
                    'product_id',
                    'submission_id',
                    'authorization',
                    'client_request_id',
                ],
                'required': [
                    'product_id',
                    'submission_id',
                    'authorization',
                ],
                'nullable': [
                ],
                'enum': [
                ],
                'validation': [
                ]
            },
            root_map={
                'validations': {
                },
                'allowed_values': {
                },
                'openapi_types': {
                    'product_id':
                        (str,),
                    'submission_id':
                        (str,),
                    'authorization':
                        (str,),
                    'client_request_id':
                        (str,),
                },
                'attribute_map': {
                    'product_id': 'productID',
                    'submission_id': 'submissionID',
                    'authorization': 'Authorization',
                    'client_request_id': 'Client-Request-ID',
                },
                'location_map': {
                    'product_id': 'path',
                    'submission_id': 'path',
                    'authorization': 'header',
                    'client_request_id': 'header',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [],
            },
            api_client=api_client
        )
        self.products_product_id_submissions_submission_id_get_endpoint = _Endpoint(
            settings={
                'response_type': (MicrosoftIngestionApiModelsSubmissionsSubmission,),
                'auth': [],
                'endpoint_path': '/products/{productID}/submissions/{submissionID}',
                'operation_id': 'products_product_id_submissions_submission_id_get',
                'http_method': 'GET',
                'servers': None,
            },
            params_map={
                'all': [
                    'product_id',
                    'submission_id',
                    'authorization',
                    'expand',
                    'client_request_id',
                ],
                'required': [
                    'product_id',
                    'submission_id',
                    'authorization',
                ],
                'nullable': [
                ],
                'enum': [
                ],
                'validation': [
                ]
            },
            root_map={
                'validations': {
                },
                'allowed_values': {
                },
                'openapi_types': {
                    'product_id':
                        (str,),
                    'submission_id':
                        (str,),
                    'authorization':
                        (str,),
                    'expand':
                        (str,),
                    'client_request_id':
                        (str,),
                },
                'attribute_map': {
                    'product_id': 'productID',
                    'submission_id': 'submissionID',
                    'authorization': 'Authorization',
                    'expand': '$expand',
                    'client_request_id': 'Client-Request-ID',
                },
                'location_map': {
                    'product_id': 'path',
                    'submission_id': 'path',
                    'authorization': 'header',
                    'expand': 'query',
                    'client_request_id': 'header',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [],
            },
            api_client=api_client
        )
        self.products_product_id_submissions_submission_id_promote_post_endpoint = _Endpoint(
            settings={
                'response_type': (MicrosoftIngestionApiModelsSubmissionsWorkflowDetail,),
                'auth': [],
                'endpoint_path': '/products/{productID}/submissions/{submissionID}/promote',
                'operation_id': 'products_product_id_submissions_submission_id_promote_post',
                'http_method': 'POST',
                'servers': None,
            },
            params_map={
                'all': [
                    'product_id',
                    'submission_id',
                    'authorization',
                    'client_request_id',
                ],
                'required': [
                    'product_id',
                    'submission_id',
                    'authorization',
                ],
                'nullable': [
                ],
                'enum': [
                ],
                'validation': [
                ]
            },
            root_map={
                'validations': {
                },
                'allowed_values': {
                },
                'openapi_types': {
                    'product_id':
                        (str,),
                    'submission_id':
                        (str,),
                    'authorization':
                        (str,),
                    'client_request_id':
                        (str,),
                },
                'attribute_map': {
                    'product_id': 'productID',
                    'submission_id': 'submissionID',
                    'authorization': 'Authorization',
                    'client_request_id': 'Client-Request-ID',
                },
                'location_map': {
                    'product_id': 'path',
                    'submission_id': 'path',
                    'authorization': 'header',
                    'client_request_id': 'header',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [],
            },
            api_client=api_client
        )
        self.products_product_id_submissions_submission_id_reports_get_endpoint = _Endpoint(
            settings={
                'response_type': (MicrosoftIngestionApiModelsCommonPagedCollectionMicrosoftIngestionApiModelsSubmissionsCertificationReport,),
                'auth': [],
                'endpoint_path': '/products/{productID}/submissions/{submissionID}/reports',
                'operation_id': 'products_product_id_submissions_submission_id_reports_get',
                'http_method': 'GET',
                'servers': None,
            },
            params_map={
                'all': [
                    'product_id',
                    'submission_id',
                    'authorization',
                    'client_request_id',
                ],
                'required': [
                    'product_id',
                    'submission_id',
                    'authorization',
                ],
                'nullable': [
                ],
                'enum': [
                ],
                'validation': [
                ]
            },
            root_map={
                'validations': {
                },
                'allowed_values': {
                },
                'openapi_types': {
                    'product_id':
                        (str,),
                    'submission_id':
                        (str,),
                    'authorization':
                        (str,),
                    'client_request_id':
                        (str,),
                },
                'attribute_map': {
                    'product_id': 'productID',
                    'submission_id': 'submissionID',
                    'authorization': 'Authorization',
                    'client_request_id': 'Client-Request-ID',
                },
                'location_map': {
                    'product_id': 'path',
                    'submission_id': 'path',
                    'authorization': 'header',
                    'client_request_id': 'header',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [],
            },
            api_client=api_client
        )
        self.products_product_id_submissions_submission_id_validations_get_endpoint = _Endpoint(
            settings={
                'response_type': (MicrosoftIngestionApiModelsCommonPagedCollectionMicrosoftIngestionApiModelsSubmissionsValidationItem,),
                'auth': [],
                'endpoint_path': '/products/{productID}/submissions/{submissionID}/validations',
                'operation_id': 'products_product_id_submissions_submission_id_validations_get',
                'http_method': 'GET',
                'servers': None,
            },
            params_map={
                'all': [
                    'product_id',
                    'submission_id',
                    'authorization',
                    'client_request_id',
                ],
                'required': [
                    'product_id',
                    'submission_id',
                    'authorization',
                ],
                'nullable': [
                ],
                'enum': [
                ],
                'validation': [
                ]
            },
            root_map={
                'validations': {
                },
                'allowed_values': {
                },
                'openapi_types': {
                    'product_id':
                        (str,),
                    'submission_id':
                        (str,),
                    'authorization':
                        (str,),
                    'client_request_id':
                        (str,),
                },
                'attribute_map': {
                    'product_id': 'productID',
                    'submission_id': 'submissionID',
                    'authorization': 'Authorization',
                    'client_request_id': 'Client-Request-ID',
                },
                'location_map': {
                    'product_id': 'path',
                    'submission_id': 'path',
                    'authorization': 'header',
                    'client_request_id': 'header',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [],
            },
            api_client=api_client
        )
        self.products_product_id_submissions_submission_id_workflowdetails_get_endpoint = _Endpoint(
            settings={
                'response_type': (MicrosoftIngestionApiModelsCommonPagedCollectionMicrosoftIngestionApiModelsSubmissionsWorkflowDetail,),
                'auth': [],
                'endpoint_path': '/products/{productID}/submissions/{submissionID}/workflowdetails',
                'operation_id': 'products_product_id_submissions_submission_id_workflowdetails_get',
                'http_method': 'GET',
                'servers': None,
            },
            params_map={
                'all': [
                    'product_id',
                    'submission_id',
                    'authorization',
                    'client_request_id',
                ],
                'required': [
                    'product_id',
                    'submission_id',
                    'authorization',
                ],
                'nullable': [
                ],
                'enum': [
                ],
                'validation': [
                ]
            },
            root_map={
                'validations': {
                },
                'allowed_values': {
                },
                'openapi_types': {
                    'product_id':
                        (str,),
                    'submission_id':
                        (str,),
                    'authorization':
                        (str,),
                    'client_request_id':
                        (str,),
                },
                'attribute_map': {
                    'product_id': 'productID',
                    'submission_id': 'submissionID',
                    'authorization': 'Authorization',
                    'client_request_id': 'Client-Request-ID',
                },
                'location_map': {
                    'product_id': 'path',
                    'submission_id': 'path',
                    'authorization': 'header',
                    'client_request_id': 'header',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [],
            },
            api_client=api_client
        )

    def products_product_id_submissions_get(
        self,
        product_id,
        authorization,
        **kwargs
    ):
        """Returns a paged collection of Submissions  # noqa: E501

        Sample request:                    GET /products/{productID}/submissions                        =&gt; returns both Inprogress and Published Submissions for Retail                    GET /products/{productID}/submissions?state={state}                        =&gt; returns the Submission (either Inprogress or Published) of requested state for Retail                    GET /products/{productID}/submissions?sandboxID={sandboxID}                        =&gt; returns both Inprogress and Published Submissions for requested Sandbox                    GET /products/{productID}/submissions?sandboxID={sandboxID}&amp;state={state}                        =&gt; returns the Submission (either Inprogress or Published) of requested state for requested Sandbox                    GET /products/{productID}/submissions?flightID={flightID}                        =&gt; returns both Inprogress and Published Submissions for requested Flight                    GET /products/{productID}/submissions?flightID={flightID}&amp;state={state}                        =&gt; returns the Submission (either Inprogress or Published) of requested state for requested Flight  # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True

        >>> thread = api.products_product_id_submissions_get(product_id, authorization, async_req=True)
        >>> result = thread.get()

        Args:
            product_id (str): ID of product
            authorization (str): User authorization

        Keyword Args:
            filter (str): Filter of submissions. Filter by State and/or Targets with operation eq is allowed.. [optional]
            expand (str): Use $expand=PublishOption to Include publish option in response. [optional]
            client_request_id (str): ID of request provIDed by user. [optional]
            _return_http_data_only (bool): response data without head status
                code and headers. Default is True.
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
            _request_auths (list): set to override the auth_settings for an a single
                request; this effectively ignores the authentication
                in the spec for a single request.
                Default is None
            async_req (bool): execute request asynchronously

        Returns:
            MicrosoftIngestionApiModelsCommonPagedCollectionMicrosoftIngestionApiModelsSubmissionsSubmission
                If the method is called asynchronously, returns the request
                thread.
        """
        kwargs['async_req'] = kwargs.get(
            'async_req', False
        )
        kwargs['_return_http_data_only'] = kwargs.get(
            '_return_http_data_only', True
        )
        kwargs['_preload_content'] = kwargs.get(
            '_preload_content', True
        )
        kwargs['_request_timeout'] = kwargs.get(
            '_request_timeout', None
        )
        kwargs['_check_input_type'] = kwargs.get(
            '_check_input_type', True
        )
        kwargs['_check_return_type'] = kwargs.get(
            '_check_return_type', True
        )
        kwargs['_spec_property_naming'] = kwargs.get(
            '_spec_property_naming', False
        )
        kwargs['_content_type'] = kwargs.get(
            '_content_type')
        kwargs['_host_index'] = kwargs.get('_host_index')
        kwargs['_request_auths'] = kwargs.get('_request_auths', None)
        kwargs['product_id'] = \
            product_id
        kwargs['authorization'] = \
            authorization
        return self.products_product_id_submissions_get_endpoint.call_with_http_info(**kwargs)

    def products_product_id_submissions_post(
        self,
        product_id,
        authorization,
        **kwargs
    ):
        """Creates a new Submission  # noqa: E501

        Sample request:                    POST /products/{productID}/submissions      {          // empty Json body      }          =&gt; create Inprogress Submission for Retail                    POST /products/{productID}/submissions      {          \"sandboxID\":\"{sandboxID}\"      }          =&gt; create Inprogress Submission for a Sandbox                    POST /products/{productID}/submissions      {          \"flightID\":\"{flightID}\"      }          =&gt; create Inprogress Submission for a Flight  # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True

        >>> thread = api.products_product_id_submissions_post(product_id, authorization, async_req=True)
        >>> result = thread.get()

        Args:
            product_id (str): ID of product
            authorization (str): User authorization

        Keyword Args:
            client_request_id (str): ID of request provIDed by user. [optional]
            microsoft_ingestion_api_models_submissions_submission_creation_request (MicrosoftIngestionApiModelsSubmissionsSubmissionCreationRequest): Request body of a Microsoft.Ingestion.Api.Models.Submissions.SubmissionCreationRequest. [optional]
            _return_http_data_only (bool): response data without head status
                code and headers. Default is True.
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
            _request_auths (list): set to override the auth_settings for an a single
                request; this effectively ignores the authentication
                in the spec for a single request.
                Default is None
            async_req (bool): execute request asynchronously

        Returns:
            MicrosoftIngestionApiModelsSubmissionsSubmission
                If the method is called asynchronously, returns the request
                thread.
        """
        kwargs['async_req'] = kwargs.get(
            'async_req', False
        )
        kwargs['_return_http_data_only'] = kwargs.get(
            '_return_http_data_only', True
        )
        kwargs['_preload_content'] = kwargs.get(
            '_preload_content', True
        )
        kwargs['_request_timeout'] = kwargs.get(
            '_request_timeout', None
        )
        kwargs['_check_input_type'] = kwargs.get(
            '_check_input_type', True
        )
        kwargs['_check_return_type'] = kwargs.get(
            '_check_return_type', True
        )
        kwargs['_spec_property_naming'] = kwargs.get(
            '_spec_property_naming', False
        )
        kwargs['_content_type'] = kwargs.get(
            '_content_type')
        kwargs['_host_index'] = kwargs.get('_host_index')
        kwargs['_request_auths'] = kwargs.get('_request_auths', None)
        kwargs['product_id'] = \
            product_id
        kwargs['authorization'] = \
            authorization
        return self.products_product_id_submissions_post_endpoint.call_with_http_info(**kwargs)

    def products_product_id_submissions_submission_id_delete(
        self,
        product_id,
        submission_id,
        authorization,
        **kwargs
    ):
        """Deletes a Submission  # noqa: E501

        Sample request:                    DELETE /products/{productID}/submissions/{submissionID}  # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True

        >>> thread = api.products_product_id_submissions_submission_id_delete(product_id, submission_id, authorization, async_req=True)
        >>> result = thread.get()

        Args:
            product_id (str): ID of product
            submission_id (str): ID of submission
            authorization (str): User authorization

        Keyword Args:
            client_request_id (str): ID of request provIDed by user. [optional]
            _return_http_data_only (bool): response data without head status
                code and headers. Default is True.
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
            _request_auths (list): set to override the auth_settings for an a single
                request; this effectively ignores the authentication
                in the spec for a single request.
                Default is None
            async_req (bool): execute request asynchronously

        Returns:
            None
                If the method is called asynchronously, returns the request
                thread.
        """
        kwargs['async_req'] = kwargs.get(
            'async_req', False
        )
        kwargs['_return_http_data_only'] = kwargs.get(
            '_return_http_data_only', True
        )
        kwargs['_preload_content'] = kwargs.get(
            '_preload_content', True
        )
        kwargs['_request_timeout'] = kwargs.get(
            '_request_timeout', None
        )
        kwargs['_check_input_type'] = kwargs.get(
            '_check_input_type', True
        )
        kwargs['_check_return_type'] = kwargs.get(
            '_check_return_type', True
        )
        kwargs['_spec_property_naming'] = kwargs.get(
            '_spec_property_naming', False
        )
        kwargs['_content_type'] = kwargs.get(
            '_content_type')
        kwargs['_host_index'] = kwargs.get('_host_index')
        kwargs['_request_auths'] = kwargs.get('_request_auths', None)
        kwargs['product_id'] = \
            product_id
        kwargs['submission_id'] = \
            submission_id
        kwargs['authorization'] = \
            authorization
        return self.products_product_id_submissions_submission_id_delete_endpoint.call_with_http_info(**kwargs)

    def products_product_id_submissions_submission_id_get(
        self,
        product_id,
        submission_id,
        authorization,
        **kwargs
    ):
        """Returns a Submission  # noqa: E501

        Sample request:                    GET /products/{productID}/submissions/{submissionID}  # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True

        >>> thread = api.products_product_id_submissions_submission_id_get(product_id, submission_id, authorization, async_req=True)
        >>> result = thread.get()

        Args:
            product_id (str): ID of product
            submission_id (str): ID of submission
            authorization (str): User authorization

        Keyword Args:
            expand (str): Use $expand=PublishOption to Include publish option in response. [optional]
            client_request_id (str): ID of request provIDed by user. [optional]
            _return_http_data_only (bool): response data without head status
                code and headers. Default is True.
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
            _request_auths (list): set to override the auth_settings for an a single
                request; this effectively ignores the authentication
                in the spec for a single request.
                Default is None
            async_req (bool): execute request asynchronously

        Returns:
            MicrosoftIngestionApiModelsSubmissionsSubmission
                If the method is called asynchronously, returns the request
                thread.
        """
        kwargs['async_req'] = kwargs.get(
            'async_req', False
        )
        kwargs['_return_http_data_only'] = kwargs.get(
            '_return_http_data_only', True
        )
        kwargs['_preload_content'] = kwargs.get(
            '_preload_content', True
        )
        kwargs['_request_timeout'] = kwargs.get(
            '_request_timeout', None
        )
        kwargs['_check_input_type'] = kwargs.get(
            '_check_input_type', True
        )
        kwargs['_check_return_type'] = kwargs.get(
            '_check_return_type', True
        )
        kwargs['_spec_property_naming'] = kwargs.get(
            '_spec_property_naming', False
        )
        kwargs['_content_type'] = kwargs.get(
            '_content_type')
        kwargs['_host_index'] = kwargs.get('_host_index')
        kwargs['_request_auths'] = kwargs.get('_request_auths', None)
        kwargs['product_id'] = \
            product_id
        kwargs['submission_id'] = \
            submission_id
        kwargs['authorization'] = \
            authorization
        return self.products_product_id_submissions_submission_id_get_endpoint.call_with_http_info(**kwargs)

    def products_product_id_submissions_submission_id_promote_post(
        self,
        product_id,
        submission_id,
        authorization,
        **kwargs
    ):
        """Promote a Preview Submission to live  # noqa: E501

        Sample request:                    POST /products/{productID}/submissions/{submissionID}/promote      [empty body]  # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True

        >>> thread = api.products_product_id_submissions_submission_id_promote_post(product_id, submission_id, authorization, async_req=True)
        >>> result = thread.get()

        Args:
            product_id (str): ID of product
            submission_id (str): ID of submission
            authorization (str): User authorization

        Keyword Args:
            client_request_id (str): ID of request provIDed by user. [optional]
            _return_http_data_only (bool): response data without head status
                code and headers. Default is True.
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
            _request_auths (list): set to override the auth_settings for an a single
                request; this effectively ignores the authentication
                in the spec for a single request.
                Default is None
            async_req (bool): execute request asynchronously

        Returns:
            MicrosoftIngestionApiModelsSubmissionsWorkflowDetail
                If the method is called asynchronously, returns the request
                thread.
        """
        kwargs['async_req'] = kwargs.get(
            'async_req', False
        )
        kwargs['_return_http_data_only'] = kwargs.get(
            '_return_http_data_only', True
        )
        kwargs['_preload_content'] = kwargs.get(
            '_preload_content', True
        )
        kwargs['_request_timeout'] = kwargs.get(
            '_request_timeout', None
        )
        kwargs['_check_input_type'] = kwargs.get(
            '_check_input_type', True
        )
        kwargs['_check_return_type'] = kwargs.get(
            '_check_return_type', True
        )
        kwargs['_spec_property_naming'] = kwargs.get(
            '_spec_property_naming', False
        )
        kwargs['_content_type'] = kwargs.get(
            '_content_type')
        kwargs['_host_index'] = kwargs.get('_host_index')
        kwargs['_request_auths'] = kwargs.get('_request_auths', None)
        kwargs['product_id'] = \
            product_id
        kwargs['submission_id'] = \
            submission_id
        kwargs['authorization'] = \
            authorization
        return self.products_product_id_submissions_submission_id_promote_post_endpoint.call_with_http_info(**kwargs)

    def products_product_id_submissions_submission_id_reports_get(
        self,
        product_id,
        submission_id,
        authorization,
        **kwargs
    ):
        """Returns a collection of CertificationReport for a Submission  # noqa: E501

        Sample request:                    GET /products/{productID}/submissions/{submissionID}/reports  # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True

        >>> thread = api.products_product_id_submissions_submission_id_reports_get(product_id, submission_id, authorization, async_req=True)
        >>> result = thread.get()

        Args:
            product_id (str): ID of product
            submission_id (str): ID of submission
            authorization (str): User authorization

        Keyword Args:
            client_request_id (str): ID of request provIDed by user. [optional]
            _return_http_data_only (bool): response data without head status
                code and headers. Default is True.
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
            _request_auths (list): set to override the auth_settings for an a single
                request; this effectively ignores the authentication
                in the spec for a single request.
                Default is None
            async_req (bool): execute request asynchronously

        Returns:
            MicrosoftIngestionApiModelsCommonPagedCollectionMicrosoftIngestionApiModelsSubmissionsCertificationReport
                If the method is called asynchronously, returns the request
                thread.
        """
        kwargs['async_req'] = kwargs.get(
            'async_req', False
        )
        kwargs['_return_http_data_only'] = kwargs.get(
            '_return_http_data_only', True
        )
        kwargs['_preload_content'] = kwargs.get(
            '_preload_content', True
        )
        kwargs['_request_timeout'] = kwargs.get(
            '_request_timeout', None
        )
        kwargs['_check_input_type'] = kwargs.get(
            '_check_input_type', True
        )
        kwargs['_check_return_type'] = kwargs.get(
            '_check_return_type', True
        )
        kwargs['_spec_property_naming'] = kwargs.get(
            '_spec_property_naming', False
        )
        kwargs['_content_type'] = kwargs.get(
            '_content_type')
        kwargs['_host_index'] = kwargs.get('_host_index')
        kwargs['_request_auths'] = kwargs.get('_request_auths', None)
        kwargs['product_id'] = \
            product_id
        kwargs['submission_id'] = \
            submission_id
        kwargs['authorization'] = \
            authorization
        return self.products_product_id_submissions_submission_id_reports_get_endpoint.call_with_http_info(**kwargs)

    def products_product_id_submissions_submission_id_validations_get(
        self,
        product_id,
        submission_id,
        authorization,
        **kwargs
    ):
        """Returns Validation for a Submission  # noqa: E501

        Sample request:                   GET /products/{productID}/submissions/{submissionID}/validations  # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True

        >>> thread = api.products_product_id_submissions_submission_id_validations_get(product_id, submission_id, authorization, async_req=True)
        >>> result = thread.get()

        Args:
            product_id (str): ID of product
            submission_id (str): ID of submission
            authorization (str): User authorization

        Keyword Args:
            client_request_id (str): ID of request provIDed by user. [optional]
            _return_http_data_only (bool): response data without head status
                code and headers. Default is True.
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
            _request_auths (list): set to override the auth_settings for an a single
                request; this effectively ignores the authentication
                in the spec for a single request.
                Default is None
            async_req (bool): execute request asynchronously

        Returns:
            MicrosoftIngestionApiModelsCommonPagedCollectionMicrosoftIngestionApiModelsSubmissionsValidationItem
                If the method is called asynchronously, returns the request
                thread.
        """
        kwargs['async_req'] = kwargs.get(
            'async_req', False
        )
        kwargs['_return_http_data_only'] = kwargs.get(
            '_return_http_data_only', True
        )
        kwargs['_preload_content'] = kwargs.get(
            '_preload_content', True
        )
        kwargs['_request_timeout'] = kwargs.get(
            '_request_timeout', None
        )
        kwargs['_check_input_type'] = kwargs.get(
            '_check_input_type', True
        )
        kwargs['_check_return_type'] = kwargs.get(
            '_check_return_type', True
        )
        kwargs['_spec_property_naming'] = kwargs.get(
            '_spec_property_naming', False
        )
        kwargs['_content_type'] = kwargs.get(
            '_content_type')
        kwargs['_host_index'] = kwargs.get('_host_index')
        kwargs['_request_auths'] = kwargs.get('_request_auths', None)
        kwargs['product_id'] = \
            product_id
        kwargs['submission_id'] = \
            submission_id
        kwargs['authorization'] = \
            authorization
        return self.products_product_id_submissions_submission_id_validations_get_endpoint.call_with_http_info(**kwargs)

    def products_product_id_submissions_submission_id_workflowdetails_get(
        self,
        product_id,
        submission_id,
        authorization,
        **kwargs
    ):
        """Returns workflow details for a Submission  # noqa: E501

        Sample request:                   GET /products/{productID}/submissions/{submissionID}/workflowdetails  # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True

        >>> thread = api.products_product_id_submissions_submission_id_workflowdetails_get(product_id, submission_id, authorization, async_req=True)
        >>> result = thread.get()

        Args:
            product_id (str): ID of product
            submission_id (str): ID of submission
            authorization (str): User authorization

        Keyword Args:
            client_request_id (str): ID of request provIDed by user. [optional]
            _return_http_data_only (bool): response data without head status
                code and headers. Default is True.
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
            _request_auths (list): set to override the auth_settings for an a single
                request; this effectively ignores the authentication
                in the spec for a single request.
                Default is None
            async_req (bool): execute request asynchronously

        Returns:
            MicrosoftIngestionApiModelsCommonPagedCollectionMicrosoftIngestionApiModelsSubmissionsWorkflowDetail
                If the method is called asynchronously, returns the request
                thread.
        """
        kwargs['async_req'] = kwargs.get(
            'async_req', False
        )
        kwargs['_return_http_data_only'] = kwargs.get(
            '_return_http_data_only', True
        )
        kwargs['_preload_content'] = kwargs.get(
            '_preload_content', True
        )
        kwargs['_request_timeout'] = kwargs.get(
            '_request_timeout', None
        )
        kwargs['_check_input_type'] = kwargs.get(
            '_check_input_type', True
        )
        kwargs['_check_return_type'] = kwargs.get(
            '_check_return_type', True
        )
        kwargs['_spec_property_naming'] = kwargs.get(
            '_spec_property_naming', False
        )
        kwargs['_content_type'] = kwargs.get(
            '_content_type')
        kwargs['_host_index'] = kwargs.get('_host_index')
        kwargs['_request_auths'] = kwargs.get('_request_auths', None)
        kwargs['product_id'] = \
            product_id
        kwargs['submission_id'] = \
            submission_id
        kwargs['authorization'] = \
            authorization
        return self.products_product_id_submissions_submission_id_workflowdetails_get_endpoint.call_with_http_info(**kwargs)

